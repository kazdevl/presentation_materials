// Code generated by MockGen. DO NOT EDIT.
// Source: post.go

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/kazdevl/presentation_materials/20221202/target/model"
)

// MockIFPostModelRepository is a mock of IFPostModelRepository interface.
type MockIFPostModelRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIFPostModelRepositoryMockRecorder
}

// MockIFPostModelRepositoryMockRecorder is the mock recorder for MockIFPostModelRepository.
type MockIFPostModelRepositoryMockRecorder struct {
	mock *MockIFPostModelRepository
}

// NewMockIFPostModelRepository creates a new mock instance.
func NewMockIFPostModelRepository(ctrl *gomock.Controller) *MockIFPostModelRepository {
	mock := &MockIFPostModelRepository{ctrl: ctrl}
	mock.recorder = &MockIFPostModelRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIFPostModelRepository) EXPECT() *MockIFPostModelRepositoryMockRecorder {
	return m.recorder
}

// FindByUserID mocks base method.
func (m *MockIFPostModelRepository) FindByUserID(userid string) (model.Posts, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByUserID", userid)
	ret0, _ := ret[0].(model.Posts)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByUserID indicates an expected call of FindByUserID.
func (mr *MockIFPostModelRepositoryMockRecorder) FindByUserID(userid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByUserID", reflect.TypeOf((*MockIFPostModelRepository)(nil).FindByUserID), userid)
}

// Get mocks base method.
func (m *MockIFPostModelRepository) Get(pk model.PostPK) (*model.Post, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", pk)
	ret0, _ := ret[0].(*model.Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIFPostModelRepositoryMockRecorder) Get(pk interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIFPostModelRepository)(nil).Get), pk)
}
